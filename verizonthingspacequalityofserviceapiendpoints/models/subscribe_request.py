# -*- coding: utf-8 -*-

"""
verizonthingspacequalityofserviceapiendpoints

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizonthingspacequalityofserviceapiendpoints.api_helper import APIHelper
from verizonthingspacequalityofserviceapiendpoints.models.device_info import DeviceInfo


class SubscribeRequest(object):

    """Implementation of the 'subscribeRequest' model.

    TODO: type model description here.

    Attributes:
        account_name (str): The numeric name of an account
        device_info (List[DeviceInfo]): An array of device identifiers
            (deviceId values)

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "account_name": 'accountName',
        "device_info": 'deviceInfo'
    }

    _optionals = [
        'account_name',
        'device_info',
    ]

    def __init__(self,
                 account_name=APIHelper.SKIP,
                 device_info=APIHelper.SKIP):
        """Constructor for the SubscribeRequest class"""

        # Initialize members of the class
        if account_name is not APIHelper.SKIP:
            self.account_name = account_name 
        if device_info is not APIHelper.SKIP:
            self.device_info = device_info 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        account_name = dictionary.get("accountName") if dictionary.get("accountName") else APIHelper.SKIP
        device_info = None
        if dictionary.get('deviceInfo') is not None:
            device_info = [DeviceInfo.from_dictionary(x) for x in dictionary.get('deviceInfo')]
        else:
            device_info = APIHelper.SKIP
        # Return an object of this model
        return cls(account_name,
                   device_info)
