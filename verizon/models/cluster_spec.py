# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper


class ClusterSpec(object):

    """Implementation of the 'ClusterSpec' model.

    TODO: type model description here.

    Attributes:
        blueprint_ref (string): TODO: type description here.
        override_selector (string): TODO: type description here.
        share_mode (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "blueprint_ref": 'blueprintRef',
        "override_selector": 'overrideSelector',
        "share_mode": 'shareMode'
    }

    _optionals = [
        'blueprint_ref',
        'override_selector',
        'share_mode',
    ]

    def __init__(self,
                 blueprint_ref=APIHelper.SKIP,
                 override_selector=APIHelper.SKIP,
                 share_mode=APIHelper.SKIP):
        """Constructor for the ClusterSpec class"""

        # Initialize members of the class
        if blueprint_ref is not APIHelper.SKIP:
            self.blueprint_ref = blueprint_ref 
        if override_selector is not APIHelper.SKIP:
            self.override_selector = override_selector 
        if share_mode is not APIHelper.SKIP:
            self.share_mode = share_mode 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        blueprint_ref = dictionary.get("blueprintRef") if dictionary.get("blueprintRef") else APIHelper.SKIP
        override_selector = dictionary.get("overrideSelector") if dictionary.get("overrideSelector") else APIHelper.SKIP
        share_mode = dictionary.get("shareMode") if dictionary.get("shareMode") else APIHelper.SKIP
        # Return an object of this model
        return cls(blueprint_ref,
                   override_selector,
                   share_mode)
