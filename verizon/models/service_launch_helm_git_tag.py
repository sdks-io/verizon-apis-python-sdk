# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class ServiceLaunchHelmGitTag(object):

    """Implementation of the 'ServiceLaunchHelmGitTag' model.

    TODO: type model description here.

    Attributes:
        tag_name (string): TODO: type description here.
        helm_chart_path (string): TODO: type description here.
        values_yaml_paths (list of string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "tag_name": 'tagName',
        "helm_chart_path": 'helmChartPath',
        "values_yaml_paths": 'valuesYamlPaths'
    }

    def __init__(self,
                 tag_name=None,
                 helm_chart_path=None,
                 values_yaml_paths=None):
        """Constructor for the ServiceLaunchHelmGitTag class"""

        # Initialize members of the class
        self.tag_name = tag_name 
        self.helm_chart_path = helm_chart_path 
        self.values_yaml_paths = values_yaml_paths 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        tag_name = dictionary.get("tagName") if dictionary.get("tagName") else None
        helm_chart_path = dictionary.get("helmChartPath") if dictionary.get("helmChartPath") else None
        values_yaml_paths = dictionary.get("valuesYamlPaths") if dictionary.get("valuesYamlPaths") else None
        # Return an object of this model
        return cls(tag_name,
                   helm_chart_path,
                   values_yaml_paths)
