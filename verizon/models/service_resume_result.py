# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper


class ServiceResumeResult(object):

    """Implementation of the 'ServiceResumeResult' model.

    TODO: type model description here.

    Attributes:
        request_id (string): TODO: type description here.
        correlation_id (string): TODO: type description here.
        message (string): TODO: type description here.
        status (string): TODO: type description here.
        sub_status (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "request_id": 'requestId',
        "correlation_id": 'correlationId',
        "message": 'message',
        "status": 'status',
        "sub_status": 'subStatus'
    }

    _optionals = [
        'request_id',
        'correlation_id',
        'message',
        'status',
        'sub_status',
    ]

    def __init__(self,
                 request_id=APIHelper.SKIP,
                 correlation_id=APIHelper.SKIP,
                 message=APIHelper.SKIP,
                 status=APIHelper.SKIP,
                 sub_status=APIHelper.SKIP):
        """Constructor for the ServiceResumeResult class"""

        # Initialize members of the class
        if request_id is not APIHelper.SKIP:
            self.request_id = request_id 
        if correlation_id is not APIHelper.SKIP:
            self.correlation_id = correlation_id 
        if message is not APIHelper.SKIP:
            self.message = message 
        if status is not APIHelper.SKIP:
            self.status = status 
        if sub_status is not APIHelper.SKIP:
            self.sub_status = sub_status 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        request_id = dictionary.get("requestId") if dictionary.get("requestId") else APIHelper.SKIP
        correlation_id = dictionary.get("correlationId") if dictionary.get("correlationId") else APIHelper.SKIP
        message = dictionary.get("message") if dictionary.get("message") else APIHelper.SKIP
        status = dictionary.get("status") if dictionary.get("status") else APIHelper.SKIP
        sub_status = dictionary.get("subStatus") if dictionary.get("subStatus") else APIHelper.SKIP
        # Return an object of this model
        return cls(request_id,
                   correlation_id,
                   message,
                   status,
                   sub_status)
