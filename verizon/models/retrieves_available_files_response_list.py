# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper
from verizon.models.retrieves_available_files_response import RetrievesAvailableFilesResponse


class RetrievesAvailableFilesResponseList(object):

    """Implementation of the 'RetrievesAvailableFilesResponseList' model.

    TODO: type model description here.

    Attributes:
        available_files_response (list of RetrievesAvailableFilesResponse):
            TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "available_files_response": 'AvailableFilesResponse'
    }

    _optionals = [
        'available_files_response',
    ]

    def __init__(self,
                 available_files_response=APIHelper.SKIP):
        """Constructor for the RetrievesAvailableFilesResponseList class"""

        # Initialize members of the class
        if available_files_response is not APIHelper.SKIP:
            self.available_files_response = available_files_response 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        available_files_response = None
        if dictionary.get('AvailableFilesResponse') is not None:
            available_files_response = [RetrievesAvailableFilesResponse.from_dictionary(x) for x in dictionary.get('AvailableFilesResponse')]
        else:
            available_files_response = APIHelper.SKIP
        # Return an object of this model
        return cls(available_files_response)
