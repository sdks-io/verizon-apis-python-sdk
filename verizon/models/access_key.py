# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper


class AccessKey(object):

    """Implementation of the 'AccessKey' model.

    TODO: type model description here.

    Attributes:
        access_id (string): Access ID of the access key.
        secret_key (string): Secret key of the access key.
        session_token (string): Session token of the access key.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "access_id": 'accessId',
        "secret_key": 'secretKey',
        "session_token": 'sessionToken'
    }

    _optionals = [
        'access_id',
        'secret_key',
        'session_token',
    ]

    def __init__(self,
                 access_id=APIHelper.SKIP,
                 secret_key=APIHelper.SKIP,
                 session_token=APIHelper.SKIP):
        """Constructor for the AccessKey class"""

        # Initialize members of the class
        if access_id is not APIHelper.SKIP:
            self.access_id = access_id 
        if secret_key is not APIHelper.SKIP:
            self.secret_key = secret_key 
        if session_token is not APIHelper.SKIP:
            self.session_token = session_token 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        access_id = dictionary.get("accessId") if dictionary.get("accessId") else APIHelper.SKIP
        secret_key = dictionary.get("secretKey") if dictionary.get("secretKey") else APIHelper.SKIP
        session_token = dictionary.get("sessionToken") if dictionary.get("sessionToken") else APIHelper.SKIP
        # Return an object of this model
        return cls(access_id,
                   secret_key,
                   session_token)
