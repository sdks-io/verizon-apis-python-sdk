# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper


class MetadataAnnotation(object):

    """Implementation of the 'MetadataAnnotation' model.

    TODO: type model description here.

    Attributes:
        node_alpha_kubernetes_io_ttl (string): TODO: type description here.
        rafay_dev_object_hash (string): TODO: type description here.
        volumes_kubernetes_io_controller_managed_attach_detach (string): TODO:
            type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "node_alpha_kubernetes_io_ttl": 'node.alpha.kubernetes.io/ttl',
        "rafay_dev_object_hash": 'rafay.dev/object-hash',
        "volumes_kubernetes_io_controller_managed_attach_detach": 'volumes.kubernetes.io/controller-managed-attach-detach'
    }

    _optionals = [
        'node_alpha_kubernetes_io_ttl',
        'rafay_dev_object_hash',
        'volumes_kubernetes_io_controller_managed_attach_detach',
    ]

    def __init__(self,
                 node_alpha_kubernetes_io_ttl=APIHelper.SKIP,
                 rafay_dev_object_hash=APIHelper.SKIP,
                 volumes_kubernetes_io_controller_managed_attach_detach=APIHelper.SKIP):
        """Constructor for the MetadataAnnotation class"""

        # Initialize members of the class
        if node_alpha_kubernetes_io_ttl is not APIHelper.SKIP:
            self.node_alpha_kubernetes_io_ttl = node_alpha_kubernetes_io_ttl 
        if rafay_dev_object_hash is not APIHelper.SKIP:
            self.rafay_dev_object_hash = rafay_dev_object_hash 
        if volumes_kubernetes_io_controller_managed_attach_detach is not APIHelper.SKIP:
            self.volumes_kubernetes_io_controller_managed_attach_detach = volumes_kubernetes_io_controller_managed_attach_detach 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        node_alpha_kubernetes_io_ttl = dictionary.get("node.alpha.kubernetes.io/ttl") if dictionary.get("node.alpha.kubernetes.io/ttl") else APIHelper.SKIP
        rafay_dev_object_hash = dictionary.get("rafay.dev/object-hash") if dictionary.get("rafay.dev/object-hash") else APIHelper.SKIP
        volumes_kubernetes_io_controller_managed_attach_detach = dictionary.get("volumes.kubernetes.io/controller-managed-attach-detach") if dictionary.get("volumes.kubernetes.io/controller-managed-attach-detach") else APIHelper.SKIP
        # Return an object of this model
        return cls(node_alpha_kubernetes_io_ttl,
                   rafay_dev_object_hash,
                   volumes_kubernetes_io_controller_managed_attach_detach)
