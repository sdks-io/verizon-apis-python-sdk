# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper


class ManagedAccountsProvisionResponse(object):

    """Implementation of the 'ManagedAccountsProvisionResponse' model.

    TODO: type model description here.

    Attributes:
        txid (string): Transaction identifier
        account_name (string): Account identifier
        paccount_name (string): Primary Account identifier
        service_name (ServiceNameEnum): Service name
        status (string): Provision status. Success or Fail
        reason (string): Detailed reason

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "txid": 'txid',
        "account_name": 'accountName',
        "paccount_name": 'paccountName',
        "service_name": 'serviceName',
        "status": 'status',
        "reason": 'reason'
    }

    _optionals = [
        'txid',
        'account_name',
        'paccount_name',
        'service_name',
        'status',
        'reason',
    ]

    def __init__(self,
                 txid=APIHelper.SKIP,
                 account_name=APIHelper.SKIP,
                 paccount_name=APIHelper.SKIP,
                 service_name='Location',
                 status=APIHelper.SKIP,
                 reason=APIHelper.SKIP):
        """Constructor for the ManagedAccountsProvisionResponse class"""

        # Initialize members of the class
        if txid is not APIHelper.SKIP:
            self.txid = txid 
        if account_name is not APIHelper.SKIP:
            self.account_name = account_name 
        if paccount_name is not APIHelper.SKIP:
            self.paccount_name = paccount_name 
        self.service_name = service_name 
        if status is not APIHelper.SKIP:
            self.status = status 
        if reason is not APIHelper.SKIP:
            self.reason = reason 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        txid = dictionary.get("txid") if dictionary.get("txid") else APIHelper.SKIP
        account_name = dictionary.get("accountName") if dictionary.get("accountName") else APIHelper.SKIP
        paccount_name = dictionary.get("paccountName") if dictionary.get("paccountName") else APIHelper.SKIP
        service_name = dictionary.get("serviceName") if dictionary.get("serviceName") else 'Location'
        status = dictionary.get("status") if dictionary.get("status") else APIHelper.SKIP
        reason = dictionary.get("reason") if dictionary.get("reason") else APIHelper.SKIP
        # Return an object of this model
        return cls(txid,
                   account_name,
                   paccount_name,
                   service_name,
                   status,
                   reason)
