# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper


class ProjectItem(object):

    """Implementation of the 'ProjectItem' model.

    TODO: type model description here.

    Attributes:
        project_id (string): TODO: type description here.
        cluster_id (string): TODO: type description here.
        id (string): TODO: type description here.
        created_at (string): TODO: type description here.
        modified_at (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "project_id": 'project_id',
        "cluster_id": 'cluster_id',
        "id": 'id',
        "created_at": 'created_at',
        "modified_at": 'modified_at'
    }

    _optionals = [
        'project_id',
        'cluster_id',
        'id',
        'created_at',
        'modified_at',
    ]

    def __init__(self,
                 project_id=APIHelper.SKIP,
                 cluster_id=APIHelper.SKIP,
                 id=APIHelper.SKIP,
                 created_at=APIHelper.SKIP,
                 modified_at=APIHelper.SKIP):
        """Constructor for the ProjectItem class"""

        # Initialize members of the class
        if project_id is not APIHelper.SKIP:
            self.project_id = project_id 
        if cluster_id is not APIHelper.SKIP:
            self.cluster_id = cluster_id 
        if id is not APIHelper.SKIP:
            self.id = id 
        if created_at is not APIHelper.SKIP:
            self.created_at = created_at 
        if modified_at is not APIHelper.SKIP:
            self.modified_at = modified_at 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        project_id = dictionary.get("project_id") if dictionary.get("project_id") else APIHelper.SKIP
        cluster_id = dictionary.get("cluster_id") if dictionary.get("cluster_id") else APIHelper.SKIP
        id = dictionary.get("id") if dictionary.get("id") else APIHelper.SKIP
        created_at = dictionary.get("created_at") if dictionary.get("created_at") else APIHelper.SKIP
        modified_at = dictionary.get("modified_at") if dictionary.get("modified_at") else APIHelper.SKIP
        # Return an object of this model
        return cls(project_id,
                   cluster_id,
                   id,
                   created_at,
                   modified_at)
