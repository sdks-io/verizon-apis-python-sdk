# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.models.account_labels import AccountLabels


class AssociateLabelRequest(object):

    """Implementation of the 'AssociateLabelRequest' model.

    TODO: type model description here.

    Attributes:
        account_name (str): The name of a billing account. An account name is
            usually numeric, and must include any leading zeros.
        labels (AccountLabels): Maximum of 2,000 objects are allowed in the
            array.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "account_name": 'accountName',
        "labels": 'labels'
    }

    def __init__(self,
                 account_name=None,
                 labels=None):
        """Constructor for the AssociateLabelRequest class"""

        # Initialize members of the class
        self.account_name = account_name 
        self.labels = labels 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        account_name = dictionary.get("accountName") if dictionary.get("accountName") else None
        labels = AccountLabels.from_dictionary(dictionary.get('labels')) if dictionary.get('labels') else None
        # Return an object of this model
        return cls(account_name,
                   labels)
