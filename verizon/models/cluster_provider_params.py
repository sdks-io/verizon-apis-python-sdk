# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper


class ClusterProviderParams(object):

    """Implementation of the 'ClusterProviderParams' model.

    TODO: type model description here.

    Attributes:
        created_at (string): TODO: type description here.
        modified_at (string): TODO: type description here.
        params (string): TODO: type description here.
        params_type (int): TODO: type description here.
        gen_data (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "created_at": 'created_at',
        "modified_at": 'modified_at',
        "params": 'params',
        "params_type": 'params_type',
        "gen_data": 'gen_data'
    }

    _optionals = [
        'created_at',
        'modified_at',
        'params',
        'params_type',
        'gen_data',
    ]

    def __init__(self,
                 created_at=APIHelper.SKIP,
                 modified_at=APIHelper.SKIP,
                 params=APIHelper.SKIP,
                 params_type=APIHelper.SKIP,
                 gen_data=APIHelper.SKIP):
        """Constructor for the ClusterProviderParams class"""

        # Initialize members of the class
        if created_at is not APIHelper.SKIP:
            self.created_at = created_at 
        if modified_at is not APIHelper.SKIP:
            self.modified_at = modified_at 
        if params is not APIHelper.SKIP:
            self.params = params 
        if params_type is not APIHelper.SKIP:
            self.params_type = params_type 
        if gen_data is not APIHelper.SKIP:
            self.gen_data = gen_data 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        created_at = dictionary.get("created_at") if dictionary.get("created_at") else APIHelper.SKIP
        modified_at = dictionary.get("modified_at") if dictionary.get("modified_at") else APIHelper.SKIP
        params = dictionary.get("params") if dictionary.get("params") else APIHelper.SKIP
        params_type = dictionary.get("params_type") if dictionary.get("params_type") else APIHelper.SKIP
        gen_data = dictionary.get("gen_data") if dictionary.get("gen_data") else APIHelper.SKIP
        # Return an object of this model
        return cls(created_at,
                   modified_at,
                   params,
                   params_type,
                   gen_data)
